<ParametricDialog xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="ParametricDialog.xsd" InterMundos="true">
	<Id>resourceRealeaseBalanceParametricDialog</Id>
	<Height>0</Height>
	<Width>400</Width>
	<Buttons>
		<DialogButton>
			<Title>OK</Title>
			<Order>0</Order>
			<DialogModalResult>Ok</DialogModalResult>
		</DialogButton>
		<DialogButton>
			<Title>Отмена</Title>
			<Order>1</Order>
			<DialogModalResult>Cancel</DialogModalResult>
		</DialogButton>
	</Buttons>
	<Title>Параметры</Title>
	<IsSavedState>true</IsSavedState>
	<IsCollectInfoSnapshot>true</IsCollectInfoSnapshot>
	<InitScript HasEscapedContent="true">
              <![CDATA[
    function(sender, args)
    {
        var parametricDialogInstanse = Core.Dialogs.ParametricDialog.prototype.currentInstance;
        var dxEntityTree = Core.Helpers.DevExpress.getDxControlByName("entityTree");
        var resultNode = null, resultEntityInfo = null;

        if (dxEntityTree)
        {
            var selectedNode = dxEntityTree.GetSelectedNode();

            var searchPredicate = function(leafNode)
            {
              
                if (resultNode === null)
                {
                    var entityInfoFromEntityInfo =
                        Core.Helpers.DevExpress.dxTreeViewGetEntityInfoFromNode(leafNode);

                    if (entityInfoFromEntityInfo)
                    {
                        if (entityInfoFromEntityInfo.entityTypeName ==
                            Core.Common.Entities.Business.Channel && entityInfoFromEntityInfo.entityId == Number.zero)
                        {                       
                            resultNode = leafNode;
                            return true;
                        }
                    }
                }
                return false;
            };

            if (selectedNode)
            {
           
                var entityInfoFromEntityInfo = Core.Helpers.DevExpress.dxTreeViewGetEntityInfoFromNode(selectedNode);
                if (entityInfoFromEntityInfo)
                {
                    if (entityInfoFromEntityInfo.entityTypeName == Core.Common.Entities.Business.Channel && entityInfoFromEntityInfo.entityId == Number.zero)
                    {
                        resultNode = selectedNode;
                    }
                }

                if (!resultNode)
                {
                    Core.Helpers.DevExpress.dxTreeViewNodeUpTraverse(selectedNode, searchPredicate);

                    if (!resultNode)
                    {
                        Core.Helpers.DevExpress.dxTreeViewNodeDownTraverse(selectedNode, searchPredicate);
                    }
                }
            } else
            {
                Core.Helpers.DevExpress.dxTreeViewNodeDownTraverse(dxEntityTree.GetRootNode(), searchPredicate);
            }
            Core.Helpers.DevExpress.dxTreeViewMakeNodeVisible(resultNode);
           
           if(resultNode)
           {
              resultEntityInfo = Core.Helpers.DevExpress.dxTreeViewGetEntityInfoFromNode(resultNode.parent);
           }
        }

        sender.Shown.AddHandler(function(s, a)
        {
            var dxButtonOk = parametricDialogInstanse.getModalResultButton(Core.Resources.Dialogs.DialogModalResults.Ok);
                        
            dxButtonOk.SetEnabled(false);
                       
            if (resultNode)
            {
                Core.Helpers.InternalApi
                    .getEntityAsync(resultEntityInfo)
                    .fail(function(response)
                    {
                        $.event.trigger(Core.Common.EventTypes.CoreAsyncError);
                    })
                    .done(function(entity)
                    {
                        var buildingIdControl1 = parametricDialogInstanse.getControlByParameterName("resourceBuildingId");
                        buildingIdControl1.AddItem([entity.id.toString(), entity.description], entity.id);
                        buildingIdControl1.SetSelectedItem(buildingIdControl1.FindItemByValue(entity.id));

                        parametricDialogInstanse.setParameterValueByName("resourceBuildingId", entity.id);
                        
                        dxButtonOk.SetEnabled(true);
                    });

                var buildingIdControl = parametricDialogInstanse.getControlByParameterName("buildingId");
                buildingIdControl.SetValue(resultEntityInfo.entityId);

                parametricDialogInstanse.setParameterValueByName("buildingId", resultEntityInfo.entityId);
            }
            else
            {
              var resourceBuildingIdControl = parametricDialogInstanse.getControlByParameterName("resourceBuildingId");
              var indx = resourceBuildingIdControl.AddItem(["0", "Отсутствует"], 0);
              resourceBuildingIdControl.SetSelectedIndex(indx);
            }
        });
    }
    ]]></InitScript>
	<Descriptors>
    
		<FormLayoutItemDescriptor ClientVisible="false">
			<Caption></Caption>
			<Name>MetaObjectId</Name>
			<TypeCode>Int32</TypeCode>
			<ParameterValueSourceType>FromInternalCode</ParameterValueSourceType>
			<NestedExtension>Default</NestedExtension>
			<Value>42</Value>
		</FormLayoutItemDescriptor>
    
    <FormLayoutItemDescriptor ClientVisible="false">
			<Caption></Caption>
			<Name>aggregatingColumnDictionary</Name>
			<TypeCode>String</TypeCode>
			<ParameterValueSourceType>FromInternalCode</ParameterValueSourceType>
			<NestedExtension>Default</NestedExtension>
			<Value>
        [
          {
			      resourceTypeId: 4,
            resourceTypeCode: "HeatSys", 
            aggregatingColumnName: "HeatSys.Heat.Total.Diff"
          }, 
			    {
			      resourceTypeId: 3,
			      resourceTypeCode: "HWS", 
			      aggregatingColumnName: "Hws.Heat.Total.Diff"
			    }
      ]</Value>
		</FormLayoutItemDescriptor>
		<!-- Контейнерные дескрипторы -->
		<FormLayoutItemDescriptor ClientVisible="false">
			<Caption></Caption>
			<Name>channelId</Name>
			<TypeCode>Int32</TypeCode>
			<ParameterValueSourceType>FromInternalCode</ParameterValueSourceType>
			<NestedExtension>Default</NestedExtension>
			<Value>0</Value>
		</FormLayoutItemDescriptor>
		<FormLayoutItemDescriptor ClientVisible="false">
			<Caption></Caption>
			<Name>periodTypeId</Name>
			<TypeCode>Int32</TypeCode>
			<ParameterValueSourceType>FromInternalCode</ParameterValueSourceType>
			<Value>3</Value>
		</FormLayoutItemDescriptor>
		<FormLayoutItemDescriptor ClientVisible="false">
			<Caption></Caption>
			<Name>includePeriodEnd</Name>
			<TypeCode>Boolean</TypeCode>
			<ParameterValueSourceType>FromInternalCode</ParameterValueSourceType>
			<NestedExtension>Default</NestedExtension>
			<Value>false</Value>
		</FormLayoutItemDescriptor>
		<FormLayoutItemDescriptor ClientVisible="false">
			<Caption></Caption>
			<Name>resourceSystemTypeId</Name>
			<TypeCode>Int32</TypeCode>
			<ParameterValueSourceType>FromInternalCode</ParameterValueSourceType>
			<Value>0</Value>
		</FormLayoutItemDescriptor>
		<FormLayoutItemDescriptor ClientVisible="false">
			<Caption></Caption>
			<Name>withVolume</Name>
			<TypeCode>Boolean</TypeCode>
			<ParameterValueSourceType>FromInternalCode</ParameterValueSourceType>
			<NestedExtension>Default</NestedExtension>
			<Value>false</Value>
		</FormLayoutItemDescriptor>
		<FormLayoutItemDescriptor ClientVisible="false">
			<Caption></Caption>
			<Name>withErrors</Name>
			<TypeCode>Boolean</TypeCode>
			<ParameterValueSourceType>FromInternalCode</ParameterValueSourceType>
			<NestedExtension>Default</NestedExtension>
			<Value>false</Value>
		</FormLayoutItemDescriptor>
		<!---->
    
		<FormLayoutItemDescriptor ClientVisible="false">
			<Caption></Caption>
			<Name>buildingId</Name>
			<TypeCode>Int32</TypeCode>
			<ParameterValueSourceType>FromUser</ParameterValueSourceType>
			<Value>0</Value>
		</FormLayoutItemDescriptor>
		<FormLayoutItemDescriptor>
			<Caption>Источник</Caption>
			<Name>resourceBuildingId</Name>
			<TypeCode>Int32</TypeCode>
			<ParameterValueSourceType>FromUser</ParameterValueSourceType>
			<NestedExtension>ComboBox</NestedExtension>
			<FormLayoutItemListBoxSetting>
				<DataSourceType>DictionaryByQuery</DataSourceType>
				<DataSource>DictionaryEntity</DataSource>
				<DataSourceQuery>
          SELECT
          [Building].[Id] [Id],
          [Building].[Description] [Description]
          FROM [Business].[Building]  [Building] WITH(NOLOCK)
          WHERE NULL IS NOT NULL
        </DataSourceQuery>
				<FormLayoutItemListBoxColumns>
					<FormLayoutItemListBoxColumn>
						<FieldName>Id</FieldName>
						<Caption></Caption>
						<Width>20</Width>
					</FormLayoutItemListBoxColumn>
					<FormLayoutItemListBoxColumn>
						<FieldName>Description</FieldName>
						<Caption></Caption>
						<Width>200</Width>
					</FormLayoutItemListBoxColumn>
				</FormLayoutItemListBoxColumns>
			</FormLayoutItemListBoxSetting>
			<Value>0</Value>
			<FormLayoutItemExtenders>
				<FormLayoutItemExtender>
					<PropertiesChain>NestedExtensionSettings.ReadOnly</PropertiesChain>
					<Value>false</Value>
				</FormLayoutItemExtender>
				<FormLayoutItemExtender>
					<PropertiesChain>NestedExtensionSettings.Properties.EnableClientSideAPI</PropertiesChain>
					<Value>true</Value>
				</FormLayoutItemExtender>
				<FormLayoutItemExtender>
					<PropertiesChain>NestedExtensionSettings.Properties.ValueField</PropertiesChain>
					<Value>Id</Value>
				</FormLayoutItemExtender>
				<FormLayoutItemExtender>
					<PropertiesChain>NestedExtensionSettings.Properties.TextField</PropertiesChain>
					<Value>Description</Value>
				</FormLayoutItemExtender>
				<FormLayoutItemExtender>
					<PropertiesChain>NestedExtensionSettings.Properties.TextFormatString</PropertiesChain>
					<Value>{1}</Value>
				</FormLayoutItemExtender>
			</FormLayoutItemExtenders>
		</FormLayoutItemDescriptor>
		<FormLayoutItemDescriptor ClientVisible="true">
			<Caption>Тип ресурсной системы</Caption>
			<Name>resourceSystemTypeId1</Name>
			<TypeCode>Int32</TypeCode>
			<ParameterValueSourceType>FromUser</ParameterValueSourceType>
			<NestedExtension>ComboBox</NestedExtension>
			<FormLayoutItemListBoxSetting>
				<DataSourceType>DictionaryByQuery</DataSourceType>
				<DataSource>DictionaryEntity</DataSource>
				<DataSourceQuery>
          SELECT
          [ResourceSystemType].[Id],
          [ResourceSystemType].[ShortName] [Code],
          [ResourceSystemType].[Description]
          FROM [Dictionaries].[ResourceSystemType] [ResourceSystemType] WITH (NOLOCK)
          WHERE [Id] IN (4,3)
        </DataSourceQuery>
				<FormLayoutItemListBoxColumns>
					<FormLayoutItemListBoxColumn>
						<FieldName>Id</FieldName>
						<Caption></Caption>
						<Width>20</Width>
					</FormLayoutItemListBoxColumn>
					<FormLayoutItemListBoxColumn>
						<FieldName>Code</FieldName>
						<Caption></Caption>
						<Width>100</Width>
					</FormLayoutItemListBoxColumn>
					<FormLayoutItemListBoxColumn>
						<FieldName>Description</FieldName>
						<Caption></Caption>
						<Width>200</Width>
					</FormLayoutItemListBoxColumn>
				</FormLayoutItemListBoxColumns>
			</FormLayoutItemListBoxSetting>
			<Value>2</Value>
			<FormLayoutItemExtenders>
				<FormLayoutItemExtender>
					<PropertiesChain>NestedExtensionSettings.Properties.EnableClientSideAPI</PropertiesChain>
					<Value>true</Value>
				</FormLayoutItemExtender>
				<FormLayoutItemExtender>
					<PropertiesChain>NestedExtensionSettings.ReadOnly</PropertiesChain>
					<Value>false</Value>
				</FormLayoutItemExtender>
				<FormLayoutItemExtender>
					<PropertiesChain>NestedExtensionSettings.Properties.ValueField</PropertiesChain>
					<Value>Id</Value>
				</FormLayoutItemExtender>
				<FormLayoutItemExtender>
					<PropertiesChain>NestedExtensionSettings.Properties.TextField</PropertiesChain>
					<Value>Description</Value>
				</FormLayoutItemExtender>
				<FormLayoutItemExtender>
					<PropertiesChain>NestedExtensionSettings.Properties.TextFormatString</PropertiesChain>
					<Value>{2}</Value>
				</FormLayoutItemExtender>
			</FormLayoutItemExtenders>
		</FormLayoutItemDescriptor>

    <FormLayoutItemDescriptor>
      <Caption>Тип периода</Caption>
      <Name>periodTypeId</Name>
      <TypeCode>Int32</TypeCode>
      <ParameterValueSourceType>FromUser</ParameterValueSourceType>
      <NestedExtension>ComboBox</NestedExtension>
      <FormLayoutItemListBoxSetting>
        <DataSourceType>DictionaryByQuery</DataSourceType>
        <DataSource>PeriodType</DataSource>
        <DataSourceQuery>SELECT * FROM [Dictionaries].[PeriodType] WHERE [Id] IN (2,3)</DataSourceQuery>
        <FormLayoutItemListBoxColumns>
          <FormLayoutItemListBoxColumn>
            <FieldName>Id</FieldName>
            <Caption></Caption>
            <Width>20</Width>
          </FormLayoutItemListBoxColumn>
          <FormLayoutItemListBoxColumn>
            <FieldName>Code</FieldName>
            <Caption></Caption>
            <Width>100</Width>
          </FormLayoutItemListBoxColumn>
          <FormLayoutItemListBoxColumn>
            <FieldName>Description</FieldName>
            <Caption></Caption>
            <Width>200</Width>
          </FormLayoutItemListBoxColumn>
        </FormLayoutItemListBoxColumns>
      </FormLayoutItemListBoxSetting>
      <Value>3</Value>
      <FormLayoutItemExtenders>
        <FormLayoutItemExtender>
          <PropertiesChain>NestedExtensionSettings.ReadOnly</PropertiesChain>
          <Value>false</Value>
        </FormLayoutItemExtender>
        <FormLayoutItemExtender>
          <PropertiesChain>NestedExtensionSettings.Properties.ValueField</PropertiesChain>
          <Value>Id</Value>
        </FormLayoutItemExtender>
        <FormLayoutItemExtender>
          <PropertiesChain>NestedExtensionSettings.Properties.TextField</PropertiesChain>
          <Value>Description</Value>
        </FormLayoutItemExtender>
        <FormLayoutItemExtender>
          <PropertiesChain>NestedExtensionSettings.Properties.TextFormatString</PropertiesChain>
          <Value>{2}</Value>
        </FormLayoutItemExtender>
      </FormLayoutItemExtenders>
    </FormLayoutItemDescriptor>

    <FormLayoutItemDescriptor>
      <Caption>Начальная дата архива</Caption>
      <Name>periodBegin</Name>
      <TypeCode>DateTime</TypeCode>
      <ParameterValueSourceType>FromUser</ParameterValueSourceType>
      <NestedExtension>DateEdit</NestedExtension>
    </FormLayoutItemDescriptor>
    <FormLayoutItemDescriptor>
      <Caption>Конечная дата архива</Caption>
      <Name>periodEnd</Name>
      <TypeCode>DateTime</TypeCode>
      <ParameterValueSourceType>FromUser</ParameterValueSourceType>
      <NestedExtension>DateEdit</NestedExtension>
    </FormLayoutItemDescriptor>

	  <FormLayoutItemDescriptor>
	    <Caption>Включительно</Caption>
	    <Name>includePeriodEnd</Name>
	    <TypeCode>Boolean</TypeCode>
	    <ParameterValueSourceType>FromUser</ParameterValueSourceType>
	    <NestedExtension>CheckBox</NestedExtension>
	  </FormLayoutItemDescriptor>
    
	</Descriptors>
</ParametricDialog>