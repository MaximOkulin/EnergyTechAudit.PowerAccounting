<FormLayout Name="channelPointForm" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="FormLayout.xsd">
	<ColCount>2</ColCount>
	<ItemHeight>32</ItemHeight>
	<Width>500</Width>
	<InitScript HasEscapedContent="true">
    function(sender, args)
    {
      jQuery(document).off(Core.Common.EventTypes.FormController.FormLoadComplete_Form);
    
      jQuery(document).on(Core.Common.EventTypes.FormController.FormLoadComplete_Form, function()
      {
          var channelFormCustomizerController = new Core.Admin.FormController.ChannelFormCustomizerController();
          channelFormCustomizerController.execute();
      });
    }
    </InitScript>
	<CommandMenu>
		<Name>channelFormCommandMenu</Name>
		<ClientVisible>true</ClientVisible>
		<Width>90</Width>
	  
    <CommandMenuItem>
	    <Name>showMiniboard</Name>	   
	    <CommandName>showMiniboard</CommandName>
	    <IconClass>font-icon-dashboard font-icon-x1_3 font-icon-darkblue</IconClass>
	  </CommandMenuItem>
    
		<CommandMenuItem>
			<Name>checkConnection</Name>
			<DropDownMode>true</DropDownMode>
			<BeginGroup>true</BeginGroup>
			<CommandName>checkConnection</CommandName>
			<IconClass>font-icon-checkconnection font-icon-color-darkred indent-right-5px</IconClass>
			<ToolTip>Проверка связи</ToolTip>
			<CommandMenuItem>
				<Name>checkConnectionWithMeasurementDevice</Name>
				<Text>Проверка связи с устройством...</Text>
				<CommandName>checkConnectionWithMeasurementDevice</CommandName>
				<IconClass>font-icon-measurement-device font-icon-darkslateblue indent-right-5px</IconClass>
			</CommandMenuItem>
			<CommandMenuItem>
				<Name>checkConnectionWithAccessPoint</Name>
				<Text>Проверка связи с точкой доступа...</Text>
				<CommandName>checkConnectionWithAccessPoint</CommandName>
				<IconClass>font-icon-access-point font-icon-color-darkred indent-right-5px</IconClass>
			</CommandMenuItem>
			<CommandMenuItem>
				<Name>checkServiceStatus</Name>
				<Text>Проверка состояния службы считывателя...</Text>
				<CommandName>checkServiceStatus</CommandName>
				<IconClass>font-icon-devicereader font-icon-black indent-right-5px</IconClass>
			</CommandMenuItem>
		</CommandMenuItem>
	</CommandMenu>
	<FormLayoutGroups>
		<FormLayoutGroup Caption="Идентифицирующие" ColSpan="2" Order="1">
			<FormLayoutItems>
				<FormLayoutItem Caption="Ид" Enabled="false" Order="1">
					<BoundProperty>Id</BoundProperty>
					<NestedExtension>SpinEdit</NestedExtension>
					<FormLayoutItemExtenders>
						<FormLayoutItemExtender>
							<PropertiesChain>NestedExtensionSettings.ReadOnly</PropertiesChain>
							<Value>true</Value>
						</FormLayoutItemExtender>
					</FormLayoutItemExtenders>
				</FormLayoutItem>
				<FormLayoutItem Caption="Наименование" Order="2" Enabled="true">
					<BoundProperty>Description</BoundProperty>
					<NestedExtension>ButtonEdit</NestedExtension>
					<FormLayoutItemExtenders>
						<FormLayoutItemExtender>
							<PropertiesChain>NestedExtensionSettings.ReadOnly</PropertiesChain>
							<Value>true</Value>
						</FormLayoutItemExtender>
						<FormLayoutItemExtender>
							<PropertiesChain>NestedExtensionSettings.Properties.Buttons.Add()</PropertiesChain>
							<Value></Value>
							<TypeName>System.Delegate</TypeName>
						</FormLayoutItemExtender>
						<FormLayoutItemExtender>
							<PropertiesChain>NestedExtensionSettings.Properties.ClientSideEvents.ButtonClick</PropertiesChain>
							<Value HasEscapedContent="true">
                function(sender, args)
                {
                  var formController = Core.Admin.FormController.prototype.currentInstance;
                  
                  if (formController)
                  {                   
                    var modelManager = formController.getModelManager();
                    
                    if(modelManager &amp;&amp; args.buttonIndex === 0)
                    {                    
                      var inputDialog = new Core.Dialogs.InputBox(
                      {
                        title: "Редактировать",
                        editableText: modelManager.getModelField("description")
                      });                      
                      inputDialog.show(function(modalResult)
                      {
                        if(modalResult == Core.Resources.Dialogs.DialogModalResults.Ok)
                        {                          
                          var value = inputDialog.getEditableText();
                          modelManager.setModelField("description", value);
                          modelManager.onModelChanged();
                        }
                      });
                    }    
                  }
                }
                </Value>
						</FormLayoutItemExtender>
					</FormLayoutItemExtenders>
				</FormLayoutItem>
				<FormLayoutItem Caption="Активен" Enabled="true" Order="3">
					<BoundProperty>Activated</BoundProperty>
					<NestedExtension>CheckBox</NestedExtension>
				</FormLayoutItem>
				<!--Мнемосхема-->
				<FormLayoutItem Caption="Мнемосхема" Order="4" Enabled="true">
					<BoundProperty>MnemoschemeId</BoundProperty>
					<NestedExtension>ButtonEdit</NestedExtension>
					<FormLayoutItemExtenders>
						<FormLayoutItemExtender>
							<PropertiesChain>NestedExtensionSettings.ReadOnly</PropertiesChain>
							<Value>true</Value>
						</FormLayoutItemExtender>
						<FormLayoutItemExtender>
							<PropertiesChain>NestedExtensionSettings.Properties.Buttons.Add()</PropertiesChain>
							<Value></Value>
							<TypeName>System.Delegate</TypeName>
						</FormLayoutItemExtender>
						<FormLayoutItemExtender>
							<PropertiesChain>NestedExtensionSettings.Properties.Buttons.Add()</PropertiesChain>
							<Value></Value>
							<TypeName>System.Delegate</TypeName>
						</FormLayoutItemExtender>
            						
						<FormLayoutItemExtender>
							<PropertiesChain>NestedExtensionSettings.Properties.ClientSideEvents.Init</PropertiesChain>
							<Value HasEscapedContent="true">
                function(sender, args)
                {           
                  var context$ = jQuery(sender.GetMainElement());
                  jQuery(".dxeButton:last img", context$).hide();
                  jQuery(".dxeButton:last", context$)
                    .append(jQuery("&lt;i style=&apos;margin-right: 2px&apos; class=&apos;font-icon-picture&apos;&gt;&lt;/i&gt;"));
                  
                  (new Core.Admin.FormController.LinkedEntityLookupDialog()).execute(
                    {
                      sender: sender, 
                      gridFilterExpression: "MnemoschemeTypeId = 1"                   
                    }
                  );
                  
                  sender.ButtonClick.AddHandler(function(sender, args)
                  {                    
                    if(args.buttonIndex === 1)
                    {                    
                      var customizer = Core.Admin.FormController.Customizer.prototype.currentInstance;
                      customizer.buttonEditShowMnemoschemeImageDialogHandler(sender, args);
                    }
                  });                                  
                }
                </Value>
						</FormLayoutItemExtender>
					</FormLayoutItemExtenders>
				</FormLayoutItem>
			</FormLayoutItems>
		</FormLayoutGroup>
		<FormLayoutGroup Caption="Основные" ColSpan="2" Order="2">
			<FormLayoutItems>
				<FormLayoutItem Caption="Шаблон настроек канала" Enabled="true" Order="1">
					<BoundProperty>ChannelTemplateId</BoundProperty>
					<NestedExtension>ButtonEdit</NestedExtension>
					<FormLayoutItemExtenders>
						<FormLayoutItemExtender>
							<PropertiesChain>NestedExtensionSettings.ReadOnly</PropertiesChain>
							<Value>true</Value>
						</FormLayoutItemExtender>
					  <FormLayoutItemExtender>
					    <PropertiesChain>NestedExtensionSettings.Properties.ClientSideEvents.Init</PropertiesChain>
					    <Value HasEscapedContent="true">
					      function(sender, args)
					      {
					      (new Core.Admin.FormController.LinkedEntityLookupDialog()).execute({sender: sender});
					      }
					    </Value>
					  </FormLayoutItemExtender>
						<FormLayoutItemExtender>
							<PropertiesChain>NestedExtensionSettings.Properties.Buttons.Add()</PropertiesChain>
							<Value></Value>
							<TypeName>System.Delegate</TypeName>
						</FormLayoutItemExtender>
					</FormLayoutItemExtenders>
				</FormLayoutItem>
				<FormLayoutItem Caption="Тип ресурсной системы" Enabled="true" Order="2">
					<BoundProperty>ResourceSystemTypeId</BoundProperty>
					<NestedExtension>ComboBox</NestedExtension>
					<FormLayoutItemExtenders>
						<FormLayoutItemExtender>
							<PropertiesChain>NestedExtensionSettings.Properties.ValueField</PropertiesChain>
							<Value>Id</Value>
						</FormLayoutItemExtender>
						<FormLayoutItemExtender>
							<PropertiesChain>NestedExtensionSettings.Properties.TextField</PropertiesChain>
							<Value>Description</Value>
						</FormLayoutItemExtender>
						<FormLayoutItemExtender>
							<PropertiesChain>NestedExtensionSettings.Properties.TextFormatString</PropertiesChain>
							<Value>{2}</Value>
						</FormLayoutItemExtender>
						<FormLayoutItemExtender>
							<PropertiesChain>NestedExtensionSettings.ReadOnly</PropertiesChain>
							<Value>true</Value>
						</FormLayoutItemExtender>
					</FormLayoutItemExtenders>
				</FormLayoutItem>
				<FormLayoutItem Caption="Измерительное устройство" Enabled="true" Order="3">
					<BoundProperty>MeasurementDeviceId</BoundProperty>
					<NestedExtension>ButtonEdit</NestedExtension>
					<FormLayoutItemExtenders>
						<FormLayoutItemExtender>
							<PropertiesChain>NestedExtensionSettings.ReadOnly</PropertiesChain>
							<Value>true</Value>
						</FormLayoutItemExtender>
						<FormLayoutItemExtender>
							<PropertiesChain>NestedExtensionSettings.Properties.Buttons.Add()</PropertiesChain>
							<Value></Value>
							<TypeName>System.Delegate</TypeName>
						</FormLayoutItemExtender>
						<FormLayoutItemExtender>
							<PropertiesChain>NestedExtensionSettings.Properties.ClientSideEvents.ButtonClick</PropertiesChain>
							<Value HasEscapedContent="true">
                function(sender, args)
                {
                  var customizer = Core.Admin.FormController.Customizer.prototype.currentInstance;
                  
                  switch(args.buttonIndex)
                  {
                    case 0:
                    {                      
                      var linkedEntityIfo = Core.Admin.FormController.LinkedEntityFormController.getLinkedEntityInfo(sender);
                                                                 
                      var linkedEntityFormController = new Core.Admin.FormController.LinkedEntityFormController();

                      linkedEntityFormController.execute
                      ({
                          linkedEntityIfo: linkedEntityIfo,
                          callback: function (formControllerRightEntity)
                          {
                              if (formControllerRightEntity)
                              {
                                  formControllerRightEntity.getCurrentByIdAsync(linkedEntityIfo.rightEntityInfo.entityId);
                              }
                          }
                      });                      
                      break;
                    }                    
                  }                
                }
                </Value>
						</FormLayoutItemExtender>
						<FormLayoutItemExtender>
							<PropertiesChain>NestedExtensionSettings.Properties.ClientSideEvents.Init</PropertiesChain>
							<Value HasEscapedContent="true">
                  function(sender, args)
                  {
                    var context$ = jQuery(sender.GetMainElement());                  
                    jQuery(".dxeButton:first img", context$).hide();                  
                    jQuery(".dxeButton:first", context$)
                    .append(jQuery("&lt;i style=&apos;margin-right: 2px; vertical-align: initial&apos; class=&apos;font-icon-edit&apos; title=&apos;Редактировать...&apos;&gt;&lt;i/&gt;"));                  
                    
                    (new Core.Admin.FormController.LinkedEntityLookupDialog()).execute(
                    {
                      sender: sender,
                      buttonIndex: Number.one                      
                    });
                  }
                </Value>
						</FormLayoutItemExtender>
						<FormLayoutItemExtender>
							<PropertiesChain>NestedExtensionSettings.Properties.Buttons.Add()</PropertiesChain>
							<Value></Value>
							<TypeName>System.Delegate</TypeName>
						</FormLayoutItemExtender>
					</FormLayoutItemExtenders>
				</FormLayoutItem>
				<FormLayoutItem Caption="Помещение" Enabled="true" Order="4">
					<BoundProperty>PlacementId</BoundProperty>
					<NestedExtension>ButtonEdit</NestedExtension>
					<FormLayoutItemExtenders>
						<FormLayoutItemExtender>
							<PropertiesChain>NestedExtensionSettings.ReadOnly</PropertiesChain>
							<Value>true</Value>
						</FormLayoutItemExtender>
					  <FormLayoutItemExtender>
					    <PropertiesChain>NestedExtensionSettings.Properties.ClientSideEvents.Init</PropertiesChain>
					    <Value HasEscapedContent="true">
					      function(sender, args)
					      {
					      (new Core.Admin.FormController.LinkedEntityLookupDialog()).execute({sender: sender});
					      }
					    </Value>
					  </FormLayoutItemExtender>
						<FormLayoutItemExtender>
							<PropertiesChain>NestedExtensionSettings.Properties.Buttons.Add()</PropertiesChain>
							<Value></Value>
							<TypeName>System.Delegate</TypeName>
						</FormLayoutItemExtender>
					</FormLayoutItemExtenders>
				</FormLayoutItem>
				<FormLayoutItem Caption="Ресурсоснабжающая организация" Enabled="true" Order="5">
					<BoundProperty>OrganizationId</BoundProperty>
					<NestedExtension>ButtonEdit</NestedExtension>
					<FormLayoutItemExtenders>
						<FormLayoutItemExtender>
							<PropertiesChain>NestedExtensionSettings.ReadOnly</PropertiesChain>
							<Value>true</Value>
						</FormLayoutItemExtender>
						<FormLayoutItemExtender>
							<PropertiesChain>NestedExtensionSettings.Properties.ClientSideEvents.Init</PropertiesChain>
							<Value HasEscapedContent="true">
                function(sender, args)
                {                                   
                  (new Core.Admin.FormController.LinkedEntityLookupDialog()).execute(
                    {
                      sender: sender, 
                      gridFilterExpression: "OrganizationTypeId=3"                   
                    }
                  );
                }
                </Value>
						</FormLayoutItemExtender>
						<FormLayoutItemExtender>
							<PropertiesChain>NestedExtensionSettings.Properties.Buttons.Add()</PropertiesChain>
							<Value></Value>
							<TypeName>System.Delegate</TypeName>
						</FormLayoutItemExtender>
					</FormLayoutItemExtenders>
				</FormLayoutItem>
				<FormLayoutItem Caption="Тип присоединения" Enabled="true" Order="6">
					<BoundProperty>TechnologicAdjunctionTypeId</BoundProperty>
					<NestedExtension>ComboBox</NestedExtension>
					<FormLayoutItemExtenders>
						<FormLayoutItemExtender>
							<PropertiesChain>NestedExtensionSettings.Properties.ValueField</PropertiesChain>
							<Value>Id</Value>
						</FormLayoutItemExtender>
						<FormLayoutItemExtender>
							<PropertiesChain>NestedExtensionSettings.Properties.TextField</PropertiesChain>
							<Value>Description</Value>
						</FormLayoutItemExtender>
						<FormLayoutItemExtender>
							<PropertiesChain>NestedExtensionSettings.Properties.TextFormatString</PropertiesChain>
							<Value>{2}</Value>
						</FormLayoutItemExtender>
						<FormLayoutItemExtender>
							<PropertiesChain>NestedExtensionSettings.ReadOnly</PropertiesChain>
							<Value>false</Value>
						</FormLayoutItemExtender>
					</FormLayoutItemExtenders>
				</FormLayoutItem>
				<FormLayoutItem Caption="Подтип ресурсной системы" Enabled="true" Order="7">
					<BoundProperty>ResourceSubsystemTypeId</BoundProperty>
					<NestedExtension>ComboBox</NestedExtension>
					<FormLayoutItemExtenders>
						<FormLayoutItemExtender>
							<PropertiesChain>NestedExtensionSettings.Properties.ValueField</PropertiesChain>
							<Value>Id</Value>
						</FormLayoutItemExtender>
						<FormLayoutItemExtender>
							<PropertiesChain>NestedExtensionSettings.Properties.TextField</PropertiesChain>
							<Value>Description</Value>
						</FormLayoutItemExtender>
						<FormLayoutItemExtender>
							<PropertiesChain>NestedExtensionSettings.Properties.TextFormatString</PropertiesChain>
							<Value>{2}</Value>
						</FormLayoutItemExtender>
						<FormLayoutItemExtender>
							<PropertiesChain>NestedExtensionSettings.ReadOnly</PropertiesChain>
							<Value>false</Value>
						</FormLayoutItemExtender>
					</FormLayoutItemExtenders>
				</FormLayoutItem>
			</FormLayoutItems>
		</FormLayoutGroup>
		<FormLayoutGroup Caption="Связи" ColSpan="2" Order="7">
			<FormLayoutItems>
				<FormLayoutItem Caption="Договорные параметры" Enabled="true" Order="1">
					<BoundProperty>ChannelLinksAgreementParameter</BoundProperty>
					<NestedExtension>ListBox</NestedExtension>
					<FormLayoutItemExtenders>
						<FormLayoutItemExtender>
							<PropertiesChain>CaptionSettings.Location</PropertiesChain>
							<Value>Top</Value>
						</FormLayoutItemExtender>
						<FormLayoutItemExtender>
							<PropertiesChain>NestedExtensionSettings.Properties.ValueField</PropertiesChain>
							<Value>Id</Value>
						</FormLayoutItemExtender>
						<FormLayoutItemExtender>
							<PropertiesChain>NestedExtensionSettings.Properties.ClientSideEvents.Init</PropertiesChain>
							<Value HasEscapedContent="true">
                function(sender, args)
                {
                var inlineListBoxController = new Core.Admin.FormController.InlineListBoxController(sender);
							  inlineListBoxController.execute();
                }
              </Value>
						</FormLayoutItemExtender>
					</FormLayoutItemExtenders>
					<FormLayoutItemListBoxSetting>
						<DataSourceType>Entity</DataSourceType>
						<DataSource>ChannelLinksAgreementParameter</DataSource>
						<FormLayoutItemListBoxColumns>
							<FormLayoutItemListBoxColumn>
								<FieldName>Id</FieldName>
								<Caption>Ид</Caption>
								<Width>25</Width>
							</FormLayoutItemListBoxColumn>
							<FormLayoutItemListBoxColumn>
								<FieldName>Description</FieldName>
								<Caption>Наименование</Caption>
							</FormLayoutItemListBoxColumn>
							<FormLayoutItemListBoxColumn>
								<FieldName>Value</FieldName>
								<Caption>Значение</Caption>
							</FormLayoutItemListBoxColumn>
						</FormLayoutItemListBoxColumns>
					</FormLayoutItemListBoxSetting>
				</FormLayoutItem>
				<FormLayoutItem Caption="Пользователи" Enabled="true" Order="2">
					<BoundProperty>UserLinksChannel</BoundProperty>
					<NestedExtension>ListBox</NestedExtension>
					<FormLayoutItemExtenders>
						<FormLayoutItemExtender>
							<PropertiesChain>CaptionSettings.Location</PropertiesChain>
							<Value>Top</Value>
						</FormLayoutItemExtender>
						<FormLayoutItemExtender>
							<PropertiesChain>NestedExtensionSettings.Properties.ValueField</PropertiesChain>
							<Value>Id</Value>
						</FormLayoutItemExtender>
						<FormLayoutItemExtender>
							<PropertiesChain>NestedExtensionSettings.Properties.ClientSideEvents.Init</PropertiesChain>
							<Value HasEscapedContent="true">
                function(sender, args)
                {
                  var inlineListBoxController = new Core.Admin.FormController.InlineListBoxController(sender);
							    inlineListBoxController.execute();
                }
              </Value>
						</FormLayoutItemExtender>
					</FormLayoutItemExtenders>
					<FormLayoutItemListBoxSetting>
						<DataSourceType>Entity</DataSourceType>
						<DataSource>UserLinksChannel</DataSource>
						<FormLayoutItemListBoxColumns>
							<FormLayoutItemListBoxColumn>
								<FieldName>Id</FieldName>
								<Caption>Ид</Caption>
								<Width>25</Width>
							</FormLayoutItemListBoxColumn>
							<FormLayoutItemListBoxColumn>
								<FieldName>UserName</FieldName>
								<Caption>Логин</Caption>
							</FormLayoutItemListBoxColumn>
							<FormLayoutItemListBoxColumn>
								<FieldName>Email</FieldName>
								<Caption>Электронная почта</Caption>
							</FormLayoutItemListBoxColumn>
							<FormLayoutItemListBoxColumn>
								<FieldName>IsApproved</FieldName>
								<Caption>Подтвержден</Caption>
							</FormLayoutItemListBoxColumn>
						</FormLayoutItemListBoxColumns>
					</FormLayoutItemListBoxSetting>
				</FormLayoutItem>
			</FormLayoutItems>
		</FormLayoutGroup>
	</FormLayoutGroups>
</FormLayout>
